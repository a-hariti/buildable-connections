{
  "title": "Stripe",
  "description": "Payment processing and ecommerce",
  "apiVersion": "",
  "platform": "paypal",
  "category": "payments",
  "image": "",
  "tags": ["payments", "paypal", "ecommerce"],
  "authentication": [
    {
      "name": "PAYPAL_CLIENT_ID",
      "label": "Enter your Paypal Client ID",
      "placeholder": "EBWKjlELKMYqRNQ6sYvFo64FtaRLRR5BdHEESmha49TM"
    },
    {
      "name": "PAYPAL_CLIENT_SECRET",
      "label": "Enter your Paypal Client Secret",
      "placeholder": "EO422dn3gQLgDbuwqTjzrFgFtaRLRR5BdHEESmha49TM"
    }
  ],
  "eventSchema": {
    "id": "WH-2N1678257S892762B-8MC99539P4557624Y",
    "event_version": "1.0",
    "create_time": "2016-04-28T11:21:44Z",
    "resource_type": "plan",
    "event_type": "BILLING.PLAN.CREATED",
    "summary": "A billing plan was created",
    "resource": {
      "id": "P-7LT50814996943336LSNDODY",
      "merchant_preferences": {
        "setup_fee": { "currency": "USD", "value": "1" },
        "return_url": "http://www.paypal.com",
        "cancel_url": "http://www.yahoo.com",
        "auto_bill_amount": "YES",
        "initial_fail_amount_action": "CONTINUE",
        "max_fail_attempts": "21"
      },
      "update_time": "2016-04-28T11:21:31.151Z",
      "description": "test web new",
      "payment_definitions": [
        {
          "name": "Payment Definition-1",
          "type": "REGULAR",
          "frequency": "Month",
          "frequency_interval": "1",
          "amount": { "currency": "USD", "value": "10" },
          "cycles": "15",
          "charge_models": [
            {
              "type": "SHIPPING",
              "amount": { "currency": "USD", "value": "1" },
              "id": "CHM-29V063578B632154XLSNDODY"
            },
            {
              "type": "TAX",
              "amount": { "currency": "USD", "value": "2" },
              "id": "CHM-72N78855RJ303084YLSNDODY"
            }
          ],
          "id": "PD-28U66480VB469201XLSNDODY"
        },
        {
          "name": "Payment Definition-2",
          "type": "TRIAL",
          "frequency": "Month",
          "frequency_interval": "1",
          "amount": { "currency": "USD", "value": "5" },
          "cycles": "5",
          "charge_models": [
            {
              "type": "SHIPPING",
              "amount": { "currency": "USD", "value": "1" },
              "id": "CHM-4CT119433N5199501LSNDODY"
            },
            {
              "type": "TAX",
              "amount": { "currency": "USD", "value": "1" },
              "id": "CHM-38H015979N656741TLSNDODY"
            }
          ],
          "id": "PD-99B78670BE878604GLSNDODY"
        }
      ],
      "name": "Fast Speed Plan",
      "state": "CREATED",
      "create_time": "2016-04-28T11:21:31.151Z",
      "links": [
        {
          "href": "https://api.paypal.com/v1/payments/billing-plans/P-7LT50814996943336LSNDODY",
          "rel": "self",
          "method": "GET"
        }
      ],
      "type": "FIXED"
    },
    "links": [
      {
        "href": "https://api.paypal.com/v1/notifications/webhooks-events/WH-2N1678257S892762B-8MC99539P4557624Y",
        "rel": "self",
        "method": "GET"
      },
      {
        "href": "https://api.paypal.com/v1/notifications/webhooks-events/WH-2N1678257S892762B-8MC99539P4557624Y/resend",
        "rel": "resend",
        "method": "POST"
      }
    ]
  },
  "settings": {
    "parseWebhookBody": false,
    "hasSubscriptionDelay": false,
    "subscriptionDelayMultiplier": 0.0
  },
  "paths": {
    "id": "_.body.id",
    "event": "_.body.event_type",
    "payload": "_.body",
    "secret": null,
    "signature": null
  },
  "connectionTypes": ["source", "action"],
  "events": [
    {
      "name": "PAYMENT-NETWORKS.ALTERNATIVE-PAYMENT.COMPLETED",
      "description": "Webhook event payload to send for Alternative Payment Completion."
    },
    {
      "name": "PAYMENT.AUTHORIZATION.CREATED",
      "description": "A payment authorization is created, approved, executed, or a future payment authorization is created."
    },
    {
      "name": "PAYMENT.AUTHORIZATION.VOIDED",
      "description": "A payment authorization is voided."
    },
    {
      "name": "PAYMENT.CAPTURE.COMPLETED",
      "description": "A payment capture completes."
    },
    {
      "name": "PAYMENT.CAPTURE.DENIED",
      "description": "A payment capture is denied."
    },
    {
      "name": "PAYMENT.CAPTURE.PENDING",
      "description": "The state of a payment capture changes to pending."
    },
    {
      "name": "PAYMENT.CAPTURE.REFUNDED",
      "description": "A merchant refunds a payment capture."
    },
    {
      "name": "PAYMENT.CAPTURE.REVERSED",
      "description": "PayPal reverses a payment capture."
    },
    {
      "name": "PAYMENT.ORDER.CANCELLED",
      "description": "A payment order is canceled."
    },
    {
      "name": "PAYMENT.ORDER.CREATED",
      "description": "A payment order is created."
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.BLOCKED",
      "description": "A payouts item was blocked."
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.CANCELED",
      "description": "A payouts item is canceled."
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.DENIED",
      "description": "A payouts item is denied."
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.FAILED",
      "description": "A payouts item fails."
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.HELD",
      "description": "A payouts item is held."
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.REFUNDED",
      "description": "A payouts item is refunded."
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.RETURNED",
      "description": "A payouts item is returned."
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.SUCCEEDED",
      "description": "A payouts item succeeds."
    },
    {
      "name": "PAYMENT.PAYOUTS-ITEM.UNCLAIMED",
      "description": "A payouts item is unclaimed."
    },
    {
      "name": "PAYMENT.PAYOUTSBATCH.DENIED",
      "description": "A batch payout payment is denied."
    },
    {
      "name": "PAYMENT.PAYOUTSBATCH.PROCESSING",
      "description": "The state of a batch payout payment changes to processing."
    },
    {
      "name": "PAYMENT.PAYOUTSBATCH.SUCCESS",
      "description": "A batch payout payment completes successfully."
    },
    {
      "name": "PAYMENT.REFUND.COMPLETED",
      "description": "This event is triggered when merchant does non referenced credit."
    },
    {
      "name": "PAYMENT.SALE.COMPLETED",
      "description": "A sale completes."
    },
    {
      "name": "BILLING.PLAN.ACTIVATED",
      "description": "A billing plan is activated."
    },
    {
      "name": "BILLING.PLAN.CREATED",
      "description": "A billing plan is created."
    },
    {
      "name": "BILLING.PLAN.DEACTIVATED",
      "description": "A billing plan is deactivated."
    },
    {
      "name": "BILLING.PLAN.PRICING-CHANGE.ACTIVATED",
      "description": "A billing plan pricing change is activated."
    },
    {
      "name": "BILLING.PLAN.PRICING-CHANGE.INPROGRESS",
      "description": "A billing plan pricing change is being processed."
    },
    {
      "name": "BILLING.PLAN.UPDATED",
      "description": "A billing plan is updated."
    },
    {
      "name": "BILLING.SUBSCRIPTION.ACTIVATED",
      "description": "A billing agreement is activated."
    },
    {
      "name": "BILLING.SUBSCRIPTION.CANCELLED",
      "description": "A billing agreement is canceled."
    },
    {
      "name": "BILLING.SUBSCRIPTION.CREATED",
      "description": "A billing agreement is created."
    },
    {
      "name": "BILLING.SUBSCRIPTION.EXPIRED",
      "description": "A billing agreement is expired."
    },
    {
      "name": "BILLING.SUBSCRIPTION.PAYMENT.FAILED",
      "description": "Subscription payment failure will trigger this webhook event."
    },
    {
      "name": "BILLING.SUBSCRIPTION.RE-ACTIVATED",
      "description": "A billing agreement is re-activated."
    },
    {
      "name": "BILLING.SUBSCRIPTION.RENEWED",
      "description": "A billing agreement is renewed."
    },
    {
      "name": "BILLING.SUBSCRIPTION.SUSPENDED",
      "description": "A billing agreement is suspended."
    },
    {
      "name": "BILLING.SUBSCRIPTION.UPDATED",
      "description": "A billing agreement is updated."
    },
    {
      "name": "CATALOG.PRODUCT.CREATED",
      "description": "Product created"
    },
    {
      "name": "CATALOG.PRODUCT.UPDATED",
      "description": "Product updated"
    },
    {
      "name": "CHECKOUT.CHECKOUT.BUYER-APPROVED",
      "description": "Express checkout payment is created and approved by buyer."
    },
    {
      "name": "CHECKOUT.ORDER.APPROVED",
      "description": "An order has been approved by buyer."
    },
    {
      "name": "CHECKOUT.ORDER.COMPLETED",
      "description": "Webhook event emitted after all the purchase_units have been processed"
    },
    {
      "name": "CHECKOUT.ORDER.SAVED",
      "description": "This event is triggered as AS2 Order is saved."
    },
    {
      "name": "CHECKOUT.ORDER.VOIDED",
      "description": "This event is triggered as AS2 Order is voided."
    },
    {
      "name": "COLLECTION.ACTIVITY.EXECUTED",
      "description": "The webhook event that is triggered when an activity ( notification or placement ) happens on a delinquency"
    },
    {
      "name": "CUSTOMER.MANAGED-ACCOUNT.RISK-ASSESSED",
      "description": "Webhook event emitted after the account has been risk assessed or the risk assessment of the account has been changed."
    },
    {
      "name": "CUSTOMER.MANAGED-ACCOUNT.UPDATED",
      "description": "Webhook event emitted after the non-loginable account have been updated."
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.CAPABILITY-UPDATED",
      "description": "This event is triggered as a notification for capability change."
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.PRODUCT-SUBSCRIPTION-UPDATED",
      "description": "This event is triggered as a notification for production subscription status change."
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.SELLER-ALREADY-INTEGRATED",
      "description": "This event is triggered as a notification for when seller goes through ISU flow but is already fully integrated with partner."
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.SELLER-CONSENT-GRANTED",
      "description": "This event is triggered as a notification for when seller grants the requested consents to partner."
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.SELLER-EMAIL-CONFIRMED",
      "description": "This event is triggered as a notification for when seller confirms email."
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.SELLER-ERROR-BAD-REQUEST",
      "description": "This event is triggered as flow starts by merchant"
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.SELLER-ERROR-INTERNAL-SERVER-ERROR",
      "description": "This event is triggered as flow starts by merchant"
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.SELLER-ONBOARDING-INITIATED",
      "description": "This event is triggered as a notification for when seller starts to create an account through partner flow."
    },
    {
      "name": "CUSTOMER.MERCHANT-INTEGRATION.SELLER-ONBOARDING-STARTED",
      "description": "This event is triggered as flow starts by merchant"
    },
    {
      "name": "CUSTOMER.PARTNER-FINANCIAL-ACCOUNT.DEBITED",
      "description": "This event is triggered for partner account debit."
    },
    {
      "name": "CUSTOMER.PAYOUT.COMPLETED",
      "description": "The webhook event payload for the `CUSTOMER.PAYOUT.COMPLETED` event."
    },
    {
      "name": "CUSTOMER.PAYOUT.FAILED",
      "description": "The webhook event payload for the `CUSTOMER.PAYOUTS.FAILED` event."
    },
    {
      "name": "CUSTOMER.USER-PROFILE.PASSWORD-CHANGED",
      "description": "The webhook event that is triggered as a result of a password change"
    },
    {
      "name": "IDENTITY.AUTHORIZATION-CONSENT.GRANTED",
      "description": "Webhook event that is triggered When end user grants permissions to third party applications"
    },
    {
      "name": "IDENTITY.AUTHORIZATION-CONSENT.REVOKED",
      "description": "User consents for merchant were revoked."
    },
    {
      "name": "INVOICING.INVOICE.CANCELLED",
      "description": "A merchant or customer cancels an invoice."
    },
    {
      "name": "INVOICING.INVOICE.CREATED",
      "description": "An invoice is created."
    },
    {
      "name": "INVOICING.INVOICE.PAID",
      "description": "An invoice is paid, partially paid, or payment is made and is pending."
    },
    {
      "name": "INVOICING.INVOICE.REFUNDED",
      "description": "An invoice is refunded or partially refunded."
    },
    {
      "name": "INVOICING.INVOICE.SCHEDULED",
      "description": "An invoice is scheduled."
    },
    {
      "name": "INVOICING.INVOICE.UPDATED",
      "description": "An invoice is updated."
    },
    {
      "name": "LOYALTY.REWARDS-PAYOUT.COMPLETED",
      "description": "This event is triggered as notification of loyalty reward payout to user."
    },
    {
      "name": "MERCHANT.ONBOARDING.COMPLETED",
      "description": "A merchant completes setup."
    },
    {
      "name": "MERCHANT.PARTNER-CONSENT.REVOKED",
      "description": "The consents for a merchant account setup are revoked or an account is closed."
    },
    {
      "name": "PAYMENT.SALE.DENIED",
      "description": "The state of a sale changes from pending to denied."
    },
    {
      "name": "PAYMENT.SALE.PENDING",
      "description": "The state of a sale changes to pending."
    },
    {
      "name": "PAYMENT.SALE.REFUNDED",
      "description": "A merchant refunds a sale."
    },
    {
      "name": "PAYMENT.SALE.REVERSED",
      "description": "PayPal reverses a sale."
    },
    {
      "name": "PAYMENTS.PAYMENT.CREATED",
      "description": "Checkout payment is created and approved by buyer."
    },
    {
      "name": "PAYMENT_NETWORKS.INSTRUMENT.LINKED-ACCOUNT-UPDATED",
      "description": "Webhook event emitted after an instrument was successfully added from the banking partner.."
    },
    {
      "name": "PRICING.COMMISSION-CONFIG.CREATED",
      "description": "This event is triggered when a new zettle pricing configuration is created."
    },
    {
      "name": "PRICING.COMMISSION-CONFIG.PROVISIONED",
      "description": "This event is triggered when a PriceConfig is assigned to an organization."
    },
    {
      "name": "PRICING.COMMISSION-CONFIG.UPDATED",
      "description": "This event is triggered when there is an update to the existing price category."
    },
    {
      "name": "TAXES.REPORTS.DELIVERED",
      "description": "This event is triggered when report delivery is completed"
    },
    {
      "name": "TAXES.REPORTS.GENERATED",
      "description": "This event is triggered when report generation completed"
    },
    {
      "name": "VAULT.CREDIT-CARD.CREATED",
      "description": "A credit card is created."
    },
    {
      "name": "VAULT.CREDIT-CARD.DELETED",
      "description": "A credit card is deleted."
    },
    {
      "name": "VAULT.CREDIT-CARD.UPDATED",
      "description": "A credit card is updated."
    },
    {
      "name": "VAULT.PAYMENT-TOKEN.CREATED",
      "description": "This webhook is triggered after a Payment Token has been created."
    },
    {
      "name": "VAULT.PAYMENT-TOKEN.DELETED",
      "description": "This webhook is triggered on successful deletion of a payment token."
    },
    {
      "name": "VAULT.PAYMENT-TOKEN.DELETION-INITIATED",
      "description": "This webhook is triggered when the deletion of payment method token is initiated. This is currently triggered for PayPal use cases."
    },
    {
      "name": "COMPLIANCE.PROCESS.AGENT-ACTION-INITIATED",
      "description": "The webhook event that is triggered when process state is changed to Manual Review."
    },
    {
      "name": "COMPLIANCE.PROCESS.COMPLETED",
      "description": "The webhook event that is triggered when process status is Completed."
    },
    {
      "name": "COMPLIANCE.PROCESS.END-USER-ACTION-REQUIRED",
      "description": "The webhook event that is triggered when process status is Need More Data."
    },
    {
      "name": "COMPLIANCE.PROCESS.EXEMPTED",
      "description": "The webhook event that is triggered when process status is Exempted."
    },
    {
      "name": "COMPLIANCE.PROCESS.FAILED",
      "description": "The webhook event that is triggered when process status is Failed."
    },
    {
      "name": "COMPLIANCE.PROCESS.NOT-APPLIED",
      "description": "The webhook event that is triggered when process status is Not Applicable."
    },
    {
      "name": "COMPLIANCE.PROCESS.SYSTEM-ACTION-INITIATED",
      "description": "The webhook event that is triggered when process status is Pending System Processing."
    },
    {
      "name": "CUSTOMER-SUPPORT.CHARGEBACK.DECISION-RESPONDED",
      "description": "This event is triggered as response notification for a chargeback."
    },
    {
      "name": "CUSTOMER.DISPUTE.CREATED",
      "description": "A customer dispute is created."
    },
    {
      "name": "CUSTOMER.DISPUTE.RESOLVED",
      "description": "A customer dispute is resolved."
    },
    {
      "name": "CUSTOMER.DISPUTE.UPDATED",
      "description": "A customer dispute is updated."
    },
    {
      "name": "CUSTOMER.MANAGED-ACCOUNT.CREATED",
      "description": "Webhook event emitted after the non-loginable account have been created."
    }
  ]
}
